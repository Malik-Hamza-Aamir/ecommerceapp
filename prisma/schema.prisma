generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

enum SellerStatus {
  CUSTOMER
  SELLER
}

model User {
  id           String       @id @unique
  username     String
  email        String       @unique
  password     String
  phone        String?
  image        UserImage?   @relation(fields: [userImageId], references: [id])
  sellerStatus SellerStatus @default(CUSTOMER)
  stores       Store[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  userImageId  String?
}

model UserImage {
  id           String       @id @default(cuid())
  name         String
  uploadStatus UploadStatus @default(PENDING)
  url          String
  key          String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  User         User[]
}

model Store {
  id          String    @id @default(cuid())
  name        String    @unique
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  User        User?     @relation(fields: [userId], references: [id])
  userId      String
  products    Product[]
}

model Product {
  id          String    @id @default(cuid())
  name        String    @unique
  description String
  price       Float
  quantity    Int
  sizes       String[]
  colors      String[]
  Store       Store?    @relation(fields: [storeId], references: [id])
  storeId     String
  Category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String
}

model Category {
  id       String    @id @default(cuid())
  title    String    @unique
  products Product[]
}
